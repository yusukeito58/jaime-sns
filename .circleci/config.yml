# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2.1 # We must use 2.1 to make use of orbs.
orbs: # specify all orbs you want to use.
  aws-code-deploy: circleci/aws-code-deploy@0.0.9
jobs:
  test:
    docker:
      - image: circleci/php:7.3-stretch-node-browsers
    steps:
      - checkout

      - run: sudo apt update && sudo apt install zlib1g-dev libsqlite3-dev libpng-dev libjpeg-dev gnupg
      - run: sudo docker-php-ext-configure gd --with-png-dir=/usr/include --with-jpeg-dir=/usr/include
      - run: sudo docker-php-ext-install zip gd
      # Download and cache dependencies

      # composer cache
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: composer install -n --prefer-dist

      - save_cache:
          key: composer-v1-{{ checksum "composer.lock" }}
          paths:
            - vendor

      # node cache

      - restore_cache:
          keys:
            - node-v4-{{ checksum "package.json" }}
            - node-v4-
      - run: npm install
      - save_cache:
          key: node-v4-{{ checksum "package.json" }}
          paths:
            - node_modules
            - ~/.yarn

      # prepare the database
      - run: touch storage/testing.sqlite
      - run: php artisan migrate --env=testing --database=sqlite_testing --force

      # run tests with phpunit
      - run: ./vendor/bin/phpunit --testdox-html tests/_output
      - store_test_results:
          path: tests/_output
      - store_artifacts:
          path: tests/_output

workflows:
  deploy_application:
    jobs:
      - test
      - aws-code-deploy/deploy:
          application-name: laravel-sns # The name of an AWS CodeDeploy application associated with the applicable IAM user or AWS account.
          deployment-group: master # The name of a new deployment group for the specified application.
          service-role-arn: arn:aws:iam::831132817655:user/laravel-sns-deploy # The service role for a deployment group.
          bundle-bucket: laravel-sns-code # The s3 bucket where an application revision will be stored.
          bundle-key: code # A key under the s3 bucket where an application revision will be stored.
          requires:
            - test
          filters:
            branches:
              only:
                - master
